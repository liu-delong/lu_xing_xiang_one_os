/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_dma.h"
#include "fsl_common.h"
#include "fsl_lpadc.h"
#include "fsl_crc.h"
#include "fsl_ctimer.h"
#include "fsl_clock.h"
#include "fsl_i2c.h"
#include "fsl_i2s.h"
#include "fsl_i2s_dma.h"
#include "fsl_rtc.h"
#include "fsl_spi.h"
#include "fsl_reset.h"
#include "fsl_usart.h"
#include "fsl_usart_dma.h"
#include "usb_device_composite.h"
#include "fsl_utick.h"
#include "fsl_wwdt.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* Used DMA device. */
#define DMA0_DMA_BASEADDR DMA0
/* DMA0 interrupt vector ID (number). */
#define DMA0_IRQN DMA0_IRQn

  /* Channel CH0 definitions */
/* Selected DMA channel number. */
#define DMA0_CH0_DMA_CHANNEL 0
/* Alias for ADC0 peripheral */
#define ADC0_PERIPHERAL ADC0
/* ADC0 interrupt vector ID (number). */
#define ADC0_IRQN ADC0_IRQn
/* ADC0 interrupt handler identifier. */
#define ADC0_IRQHANDLER ADC0_IRQHandler
/* Definition of peripheral ID */
#define CRC_ENGINE_PERIPHERAL ((CRC_Type *)CRC_ENGINE)
/* Definition of peripheral ID */
#define CTIMER0_PERIPHERAL CTIMER0
/* Timer tick frequency in Hz (input frequency of the timer) */
#define CTIMER0_TICK_FREQ 96000000UL
/* Timer tick period in ns (input period of the timer) */
#define CTIMER0_TICK_PERIOD 10UL
/* Definition of peripheral ID */
#define CTIMER1_PERIPHERAL CTIMER1
/* Timer tick frequency in Hz (input frequency of the timer) */
#define CTIMER1_TICK_FREQ 96000000UL
/* Timer tick period in ns (input period of the timer) */
#define CTIMER1_TICK_PERIOD 10UL
/* Definition of peripheral ID */
#define CTIMER2_PERIPHERAL CTIMER2
/* Timer tick frequency in Hz (input frequency of the timer) */
#define CTIMER2_TICK_FREQ 96000000UL
/* Timer tick period in ns (input period of the timer) */
#define CTIMER2_TICK_PERIOD 10UL
/* Definition of peripheral ID */
#define CTIMER3_PERIPHERAL CTIMER3
/* Timer tick frequency in Hz (input frequency of the timer) */
#define CTIMER3_TICK_FREQ 96000000UL
/* Timer tick period in ns (input period of the timer) */
#define CTIMER3_TICK_PERIOD 10UL
/* Definition of peripheral ID */
#define CTIMER4_PERIPHERAL CTIMER4
/* Timer tick frequency in Hz (input frequency of the timer) */
#define CTIMER4_TICK_FREQ 96000000UL
/* Timer tick period in ns (input period of the timer) */
#define CTIMER4_TICK_PERIOD 10UL
/* BOARD_InitPeripherals defines for FLEXCOMM1 */
/* Definition of peripheral ID */
#define I2C1_PERIPHERAL ((I2C_Type *)FLEXCOMM1)
/* Definition of the clock source frequency */
#define I2C1_CLOCK_SOURCE 12000000UL
/* BOARD_InitPeripherals defines for FLEXCOMM7 */
/* Definition of peripheral ID */
#define I2S7_PERIPHERAL ((I2S_Type *)FLEXCOMM7)
/* Definition of the clock source frequency */
#define I2S7_CLOCK_SOURCE 46545454UL
/* Selected DMA channel number. */
#define I2S7_TX_DMA_CHANNEL 19
/* Used DMA device. */
#define I2S7_TX_DMA_BASEADDR DMA0
/* Definition of peripheral ID */
#define RTC_PERIPHERAL RTC
/* BOARD_InitPeripherals defines for FLEXCOMM0 */
/* Definition of peripheral ID */
#define SPI0_PERIPHERAL ((SPI_Type *)FLEXCOMM0)
/* Definition of the clock source frequency */
#define SPI0_CLOCK_SOURCE 12000000UL
/* BOARD_InitPeripherals defines for FLEXCOMM3 */
/* Definition of peripheral ID */
#define SPI3_PERIPHERAL ((SPI_Type *)FLEXCOMM3)
/* Definition of the clock source frequency */
#define SPI3_CLOCK_SOURCE 48000000UL
/* BOARD_InitPeripherals defines for FLEXCOMM6 */
/* Definition of peripheral ID */
#define SPI6_PERIPHERAL ((SPI_Type *)FLEXCOMM6)
/* Definition of the clock source frequency */
#define SPI6_CLOCK_SOURCE 12000000UL
/* BOARD_InitPeripherals defines for FLEXCOMM8 */
/* Definition of peripheral ID */
#define SPI8_PERIPHERAL ((SPI_Type *)FLEXCOMM8)
/* Definition of the clock source frequency */
#define SPI8_CLOCK_SOURCE 48000000UL
/* Definition of peripheral ID */
#define USART2_PERIPHERAL ((USART_Type *)FLEXCOMM2)
/* Definition of the clock source frequency */
#define USART2_CLOCK_SOURCE 12000000UL
/* Selected DMA channel number. */
#define USART2_RX_DMA_CHANNEL 10
/* Used DMA device. */
#define USART2_RX_DMA_BASEADDR DMA0
/* Selected DMA channel number. */
#define USART2_TX_DMA_CHANNEL 11
/* Used DMA device. */
#define USART2_TX_DMA_BASEADDR DMA0
/* Definition of peripheral ID */
#define USART4_PERIPHERAL ((USART_Type *)FLEXCOMM4)
/* Definition of the clock source frequency */
#define USART4_CLOCK_SOURCE 12000000UL
/* Selected DMA channel number. */
#define USART4_RX_DMA_CHANNEL 12
/* Used DMA device. */
#define USART4_RX_DMA_BASEADDR DMA0
/* Selected DMA channel number. */
#define USART4_TX_DMA_CHANNEL 13
/* Used DMA device. */
#define USART4_TX_DMA_BASEADDR DMA0
/* Definition of peripheral ID */
#define USART5_PERIPHERAL ((USART_Type *)FLEXCOMM5)
/* Definition of the clock source frequency */
#define USART5_CLOCK_SOURCE 12000000UL
/* Selected DMA channel number. */
#define USART5_RX_DMA_CHANNEL 14
/* Used DMA device. */
#define USART5_RX_DMA_BASEADDR DMA0
/* Selected DMA channel number. */
#define USART5_TX_DMA_CHANNEL 15
/* Used DMA device. */
#define USART5_TX_DMA_BASEADDR DMA0
/* BOARD_InitPeripherals defines for UTICK0 */
/* Definition of peripheral ID */
#define UTICK0_PERIPHERAL UTICK0
/* Definition of kUTICK_Repeat operational mode */
#define UTICK0_MODE kUTICK_Repeat
/* Timer tick frequency in Hz (input frequency of the timer) */
#define UTICK0_TICK_FREQ 1000000UL
/* Timer tick period in ns (input period of the timer) */
#define UTICK0_TICK_PERIOD 1000UL
/* Definition of timer value in ticks */
#define UTICK0_TICKS 0UL
/* UTICK0 interrupt vector ID (number). */
#define UTICK0_IRQN UTICK0_IRQn
/* BOARD_InitPeripherals defines for WWDT */
/* Definition of peripheral ID */
#define WWDT_PERIPHERAL ((WWDT_Type *) WWDT_BASE)
/* Definition of the Watchdog Timer Window value */
#define WWDT_WINDOW 16777215UL
/* Definition of the Watchdog Timer Constant value */
#define WWDT_TIMEOUT 12287UL
/* Definition of the Watchdog Timer Warning Interrupt value */
#define WWDT_WARNING 0UL
/* WWDT interrupt vector ID (number). */
#define WWDT_IRQN WDT_BOD_IRQn
/* WWDT interrupt handler identifier. */
#define WWDT_IRQHANDLER WDT_BOD_IRQHandler

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern dma_handle_t DMA0_CH0_Handle;
extern const lpadc_config_t ADC0_config;
extern const crc_config_t CRC_ENGINE_config;
extern const ctimer_config_t CTIMER0_config;
extern const ctimer_config_t CTIMER1_config;
extern const ctimer_config_t CTIMER2_config;
extern const ctimer_config_t CTIMER3_config;
extern const ctimer_config_t CTIMER4_config;
extern const i2c_master_config_t I2C1_config;
extern const i2s_config_t I2S7_config;
extern dma_handle_t I2S7_TX_Handle;
extern i2s_dma_handle_t I2S7_Tx_DMA_Handle;
extern const spi_master_config_t SPI0_config;
extern const spi_master_config_t SPI3_config;
extern const spi_master_config_t SPI6_config;
extern const spi_master_config_t SPI8_config;
extern const usart_config_t USART2_config;
extern dma_handle_t USART2_RX_Handle;
extern dma_handle_t USART2_TX_Handle;
extern usart_dma_handle_t USART2_USART_DMA_Handle;
extern const usart_config_t USART4_config;
extern dma_handle_t USART4_RX_Handle;
extern dma_handle_t USART4_TX_Handle;
extern usart_dma_handle_t USART4_USART_DMA_Handle;
extern const usart_config_t USART5_config;
extern dma_handle_t USART5_RX_Handle;
extern dma_handle_t USART5_TX_Handle;
extern usart_dma_handle_t USART5_USART_DMA_Handle;
extern const wwdt_config_t WWDT_config;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
