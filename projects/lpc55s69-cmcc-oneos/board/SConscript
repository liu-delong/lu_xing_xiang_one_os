import os
import osconfig
from build_tools import *

sys.path.append(Env['OS_ROOT'] + '/drivers/hal/lpc/scripts/')
import prebuild
prebuild.prebuild(Env['BSP_ROOT'])

pwd = PresentDir()
LIBS    = []
LIBPATH = []

# add general drivers

path =  [pwd]
src = []
#source_file = pathlib.Path(path + '/source')

src = Split('''
board/board.c
board/clock_config.c
board/peripherals.c
board/pin_mux.c
board/system_LPC55S69_cm33_core0.c
''')

path =  [pwd]   
# path   include path in project
path += [pwd + '/board']
path += [pwd + '/ports']

if IsDefined(['BSP_USING_USB']):
    src += Glob('source/generated/*.c')
    path += [pwd + '/source']
    path += [pwd + '/source/generated']
    
if osconfig.CROSS_TOOL == 'gcc':
    src += [pwd + '/startup/startup_LPC55S69_cm33_core0_gcc.S']
elif osconfig.CROSS_TOOL == 'keil':
    src += [pwd + '/startup/startup_LPC55S69_cm33_core0_arm.lib']
elif osconfig.CROSS_TOOL == 'iar':
    src += [pwd + '/startup/startup_LPC55S69_cm33_core0_iar.s']

CPPDEFINES = ['CPU_LPC55S69JBD100_cm33_core0'] 
group = AddCodeGroup('bsp', src, depend = [''], CPPPATH = path, CPPDEFINES = CPPDEFINES)
    
Return('group')
